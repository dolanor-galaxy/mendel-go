# Mendel's Accountant input file
# This is in TOML format (https://github.com/naoina/toml)

[basic]
                      case_id = "test002"
                     pop_size = 50      # for tribes/parralel runs (not supported yet) this is the size of each tribe
              num_generations = 20

[mutations]
                    mutn_rate = 10.0    # total new mutations per individual per generation
              mutn_rate_model = "poisson"   # fixed (mutn_rate rounded to int), or poisson
                frac_fav_mutn = 0.01   # fraction of total number of mutations that are favorable
             fraction_neutral = 0.05     # fraction of total number of mutations that are neutral
                  genome_size = 0.3E+09     # number of nucleotides in 1 set of chromosomes?? Used to set certain other factors.
         fitness_effect_model = "fixed"    # fixed (set uniform_fitness_effect_*), uniform (even distribution), or weibull.
   uniform_fitness_effect_del = 0.001   # specifies all deleterious mutations should have the same effect. Only used if fitness_effect_model=fixed.
   uniform_fitness_effect_fav = 0.001   # specifies all favorable mutations should have the same effect. Only used if fitness_effect_model=fixed.
    high_impact_mutn_fraction = 0.01
   high_impact_mutn_threshold = 0.01
         max_fav_fitness_gain = 0.1     # the fitness gain of each favorable mutation will range between 0 and this number
           fraction_recessive = 0.5     # determines how many mutations are recessive vs. dominant
  recessive_hetero_expression = 0.1     # the fraction of recessive mutations that are expressed.
   dominant_hetero_expression = 0.9     # the fraction of dominant mutations that are expressed.
     multiplicative_weighting = 0.0     # partially combine mutation fitness multiplicatively as well as additively (not implemented yet)
        synergistic_epistasis = false
         se_nonlinked_scaling = 0.0
            se_linked_scaling = 0.0
         num_initial_fav_mutn = 0       # the number of favorable mutations in each individual in population 0??
             upload_mutations = false
              allow_back_mutn = false
        polygenic_beneficials = false
               polygenic_init = "AAAAAA"
             polygenic_target = "TCGTCG"
             polygenic_effect = 0.001

[selection]
        fraction_random_death = 0.0
  fitness_dependent_fertility = false
             selection_model = "fulltrunc"
                 heritability = 1.0     # what percentage effect fitness from mutations should have on selection (the rest is chance)
            non_scaling_noise = 0.2
     partial_truncation_value = 0.5

[population]
            reproductive_rate = 2.0     # how many offspring per individual (times 2 for both parents). This combined with fraction_random_death determines the average num of offspring
          num_offspring_model = "fixed"  # uniform (even distribution), fixed (rounded to int), fortran (what mendel-f90 used), or fitness (weighted according to fitness)
          recombination_model = 3        # clonal = 1, suppressed = 2, full_sexual = 3 (only currently supporting 3)
  fraction_self_fertilization = 0.0     # hermaphroditic (not currently supporting)
      num_contrasting_alleles = 0
   max_total_fitness_increase = 0
     initial_alleles_pop_frac = 1.0
   initial_alleles_amp_factor = 1000
              crossover_model = "full"  # none, full (each LB has a 50/50 chance of coming from dad or mom)
          mean_num_crossovers = 1       # only used for crossover_model=partial, the average number of crossovers per chromosome
           crossover_fraction = 0.2     # only used for crossover_model=partial, the average fraction of linkage blocks that crossover from the seondary chromosome to the primary
              dynamic_linkage = true    # if true, each LB inherited independently, not affected by neighbors???
    haploid_chromosome_number = 23      # number of chromosomes in 1 set (e.g. in a gamete) - not currently used
         num_linkage_subunits = 69      # total number of linkage blocks in each individual's genome
             pop_growth_model = 0
              pop_growth_rate = 0.0
            carrying_capacity = 1000
               bottleneck_yes = false   # an event like the flood (not currently supporting)
        bottleneck_generation = 0
          bottleneck_pop_size = 0
   num_bottleneck_generations = 0

[substructure]
                  is_parallel = false
            homogenous_tribes = true
          num_indiv_exchanged = 1
        migration_generations = 10
              migration_model = 1
           tribal_competition = false
               tribal_fission = false
            tc_scaling_factor = 0.0
           group_heritability = 0.0
          social_bonus_factor = 1.0

[computation]
           tracking_threshold = 1.0     # Below this fitness effect value, near neutral mutations will be pooled instead of tracked individually
               track_neutrals = false   # if they are neutral, why track them?
         extinction_threshold = 0.0     # If the tribe or population fitness falls below this value, consider it extinct and stop the simulation
       max_del_mutn_per_indiv = 10000
       max_neu_mutn_per_indiv = 100
       max_fav_mutn_per_indiv = 100
           random_number_seed = 42      # If random_number_seed==0 we use a truly random seed, otherwise it will use the same sequence each run
                   reseed_rng = false   # not used
                   write_dump = false
                    write_vcf = false
                 restart_case = false
          restart_dump_number = 0
             plot_allele_gens = 100
                    verbosity = 0      # higher number means more verbose, 9 is essentially debug
               data_file_path = "./test/output/testcase2"     # where the output files should go. Will create this directory if necessary
              files_to_output = "mendel.hst"        # list of files (separated by commas) that should be generated. The filenames have fixed meanings.
